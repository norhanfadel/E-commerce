package com.brands.dao;
// Generated Apr 15, 2020, 11:07:19 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Orders generated by hbm2java
 */
@Entity
@Table(name="orders"
    ,catalog="brands"
    , uniqueConstraints = @UniqueConstraint(columnNames="Order_Num") 
)
public class Orders  implements java.io.Serializable {


     private int id;
     private Users users;
     private double amount;
     private String customerAddress;
     private Date orderDate;
     private int orderNum;
     private Integer bought = 1;
     private Set<OrderDetails> orderDetailses = new HashSet<OrderDetails>(0);

    public Orders() {
    }

	
    public Orders(int id, Users users, double amount, String customerAddress, Date orderDate, int orderNum) {
        this.id = id;
        this.users = users;
        this.amount = amount;
        this.customerAddress = customerAddress;
        this.orderDate = orderDate;
        this.orderNum = orderNum;
    }
    public Orders(Users users, double amount, String customerAddress, Date orderDate, Integer bought, Set<OrderDetails> orderDetailses) {
        this.users = users;
        this.amount = amount;
        this.customerAddress = customerAddress;
        this.orderDate = orderDate;
        this.bought = bought;
        this.orderDetailses = orderDetailses;
    }
    public Orders( Users users, double amount, String customerAddress, Date orderDate, int orderNum) {
        this.users = users;
        this.amount = amount;
        this.customerAddress = customerAddress;
        this.orderDate = orderDate;
        this.orderNum = orderNum;
    }
    public Orders(int id, Users users, double amount, String customerAddress, Date orderDate, int orderNum, Integer bought, Set<OrderDetails> orderDetailses) {
       this.id = id;
       this.users = users;
       this.amount = amount;
       this.customerAddress = customerAddress;
       this.orderDate = orderDate;
       this.orderNum = orderNum;
       this.bought = bought;
       this.orderDetailses = orderDetailses;
    }
   
     @Id 

    
    @Column(name="ID", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="User_id", nullable=false)
    public Users getUsers() {
        return this.users;
    }
    
    public void setUsers(Users users) {
        this.users = users;
    }

    
    @Column(name="Amount", nullable=false, precision=22, scale=0)
    public double getAmount() {
        return this.amount;
    }
    
    public void setAmount(double amount) {
        this.amount = amount;
    }

    
    @Column(name="Customer_Address", nullable=false)
    public String getCustomerAddress() {
        return this.customerAddress;
    }
    
    public void setCustomerAddress(String customerAddress) {
        this.customerAddress = customerAddress;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="Order_Date", nullable=false, length=10)
    public Date getOrderDate() {
        return this.orderDate;
    }
    
    public void setOrderDate(Date orderDate) {
        this.orderDate = orderDate;
    }

    
    @Column(name="Order_Num", unique=false, nullable=false)
    public int getOrderNum() {
        return this.orderNum;
    }
    
    public void setOrderNum(int orderNum) {
        this.orderNum = orderNum;
    }

    
    @Column(name="bought")
    public Integer getBought() {
        return this.bought;
    }
    
    public void setBought(Integer bought) {
        this.bought = bought;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="orders")
    public Set<OrderDetails> getOrderDetailses() {
        return this.orderDetailses;
    }
    
    public void setOrderDetailses(Set<OrderDetails> orderDetailses) {
        this.orderDetailses = orderDetailses;
    }




}


